services:
  infisical:
    container_name: infisical-backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    image: infisical/infisical:latest-postgres
    pull_policy: always
    env_file: .env
    ports:
      - 80:8080
    environment:
      - NODE_ENV=production
    networks:
      - infisical

  redis:
    image: redis:8.0-alpine
    container_name: infisical-redis
    env_file: .env
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379
    networks:
      - infisical
    volumes:
      - redis_data:/data

  db:
    container_name: infisical-db
    image: postgres:17-alpine
    restart: always
    env_file: .env
    volumes:
      - infisical_pg_data:/var/lib/postgresql/data
    networks:
      - infisical
    healthcheck:
      test: "pg_isready --username=${POSTGRES_USER} && psql --username=${POSTGRES_USER} --list"
      interval: 5s
      timeout: 10s
      retries: 10

  zecretly_db:
    container_name: zecretly-db
    image: postgres:17-alpine
    restart: always
    environment:
      - POSTGRES_USER=${ZECRETLY_DB_USER:-zecretly}
      - POSTGRES_PASSWORD=${ZECRETLY_DB_PASSWORD:-zecretly_password}
      - POSTGRES_DB=${ZECRETLY_DB_NAME:-zecretly}
    volumes:
      - zecretly_pg_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    networks:
      - infisical
    healthcheck:
      test: "pg_isready --username=${ZECRETLY_DB_USER:-zecretly} && psql --username=${ZECRETLY_DB_USER:-zecretly} --list"
      interval: 5s
      timeout: 10s
      retries: 10

  zecretly_backend:
    container_name: zecretly
    depends_on:
      zecretly_db:
        condition: service_healthy
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    restart: unless-stopped
    env_file: .env
    ports:
      - 3000:3000
    volumes:
      - ./backend/src:/usr/src/app/src
    networks:
      - infisical

volumes:
  infisical_pg_data:
    driver: local
  zecretly_pg_data:
    driver: local
  redis_data:
    driver: local

networks:
  infisical:
