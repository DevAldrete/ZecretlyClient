{
    // ---------------------------------------------------------------------------
    // General Editor Settings
    // ---------------------------------------------------------------------------
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    "editor.renderWhitespace": "boundary", // "none", "boundary", "selection", "trailing", "all"
    "editor.wordWrap": "on", // Keep lines from going off-screen
    "editor.minimap.enabled": true,
    "editor.linkedEditing": true, // Auto-rename matching HTML/XML tags
    "editor.guides.bracketPairs": "active", // Highlights active bracket pair guides
    "editor.bracketPairColorization.enabled": true, // Colorizes matching brackets
    "breadcrumbs.enabled": true, // Show breadcrumbs at the top of the editor
    "explorer.compactFolders": false, // Personal preference, set to true if you like nested folders more compact

    // ---------------------------------------------------------------------------
    // File Settings
    // ---------------------------------------------------------------------------
    "files.autoSave": "afterDelay", // "off", "afterDelay", "onFocusChange", "onWindowChange"
    "files.autoSaveDelay": 1000, // Delay in ms for autoSave
    "files.eol": "\n", // Ensure consistent line endings (Linux/macOS)
    "files.insertFinalNewline": true, // Ensure files end with a newline
    "files.trimTrailingWhitespace": true, // Remove trailing whitespace on save

    // Exclude files and folders from the explorer (improves performance)
    "files.exclude": {
      "**/.git": true,
      "**/.svn": true,
      "**/.hg": true,
      "**/CVS": true,
      "**/.DS_Store": true,
      "**/Thumbs.db": true,
      "**/node_modules": true, // Already well-handled, but explicit is fine
      "**/.cache": true,
      "**/dist": false, // You might want to see your build output
      "**/build": false, // You might want to see your build output
      "**/coverage": true
    },
    // Exclude files from search (can also use .gitignore patterns)
    "search.exclude": {
      "**/node_modules": true,
      "**/bower_components": true,
      "**/*.code-search": true,
      "**/dist": true,
      "**/build": true,
      "**/coverage": true,
      "**/.next": true, // If using Next.js in frontend
      "**/.cache": true
    },

    // ---------------------------------------------------------------------------
    // Formatting (Prettier)
    // ---------------------------------------------------------------------------
    "editor.formatOnSave": true, // Format files on save
    "editor.defaultFormatter": "esbenp.prettier-vscode", // Set Prettier as the default formatter
    "prettier.requireConfig": true, // Only format if a Prettier config file is found
    "prettier.ignorePath": ".prettierignore", // Use .prettierignore file

    // Specific language formatters (Prettier will handle these if configured)
    "[javascript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascriptreact]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescriptreact]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[json]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[jsonc]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[markdown]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.wordWrap": "on" // Good for prose
    },
    "[yaml]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode" // Or redhat.vscode-yaml if preferred
    },
    "[html]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[css]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[scss]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },

    // ---------------------------------------------------------------------------
    // Linting (ESLint)
    // ---------------------------------------------------------------------------
    "eslint.validate": [
      "javascript",
      "javascriptreact",
      "typescript",
      "typescriptreact"
    ],
    // ESLint can also format, but we prefer Prettier for formatting.
    // This ensures ESLint fixes other issues (like code quality) on save.
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit", // Use "explicit" for VS Code 1.40+
      "source.organizeImports": "never" // Let ESLint/Prettier handle import sorting if configured
    },
    "eslint.format.enable": false, // Disable ESLint's own formatter, let Prettier handle it
    // To enable ESLint for files not explicitly listed in eslint.validate (e.g. .vue, .svelte)
    // "eslint.probe": [
    //   "javascript",
    //   "javascriptreact",
    //   "typescript",
    //   "typescriptreact",
    //   "html",
    //   "vue",
    //   "markdown"
    // ],

    // ---------------------------------------------------------------------------
    // TypeScript / JavaScript Specific Settings
    // ---------------------------------------------------------------------------
    "javascript.updateImportsOnFileMove.enabled": "always",
    "typescript.updateImportsOnFileMove.enabled": "always",
    "javascript.suggest.autoImports": true,
    "typescript.suggest.autoImports": true,
    // For path aliases (e.g., @/components/*) to work well with auto-import and Go To Definition,
    // ensure your tsconfig.json or jsconfig.json has `baseUrl` and `paths` configured.

    // ---------------------------------------------------------------------------
    // Rust Specific Settings (for Tauri) - Requires rust-analyzer extension
    // ---------------------------------------------------------------------------
    "[rust]": {
      "editor.defaultFormatter": "rust-lang.rust-analyzer",
      "editor.formatOnSave": true // rust-analyzer handles formatting well
    },
    "rust-analyzer.check.command": "clippy", // Use clippy for more thorough checks
    "rust-analyzer.showUnlinkedFileNotification": false,

    // ---------------------------------------------------------------------------
    // Terminal Settings
    // ---------------------------------------------------------------------------
    // "terminal.integrated.defaultProfile.windows": "Git Bash", // Example for Windows
    // "terminal.integrated.defaultProfile.linux": "bash",
    // "terminal.integrated.defaultProfile.osx": "zsh",
    "terminal.integrated.fontSize": 13,
    "terminal.integrated.fontFamily": "MesloLGS NF, monospace", // Example with Nerd Font for icons

    // ---------------------------------------------------------------------------
    // Emmet (for HTML/JSX)
    // ---------------------------------------------------------------------------
    "emmet.includeLanguages": {
      "javascript": "javascriptreact",
      "typescript": "typescriptreact"
    },
    "emmet.triggerExpansionOnTab": true,

    // ---------------------------------------------------------------------------
    // Git Settings
    // ---------------------------------------------------------------------------
    "git.autofetch": true,
    "git.confirmSync": false, // Don't confirm sync when pulling
    "git.enableSmartCommit": true, // Stage all changes when no specific files are staged

    // ---------------------------------------------------------------------------
    // Other Useful Settings
    // ---------------------------------------------------------------------------
    "workbench.editor.labelFormat": "default", // "default", "short", "medium", "long"
    "workbench.startupEditor": "newUntitledFile", // "none", "welcomePage", "readme", "newUntitledFile", "welcomePageInEmptyWorkbench"
    "window.zoomLevel": 0, // Adjust overall zoom level of VS Code UI
    "files.readonlyInclude": {
      "**/routeTree.gen.ts": true
    },
    "files.watcherExclude": {
      "**/routeTree.gen.ts": true
    },
  }
